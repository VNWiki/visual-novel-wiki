import{_ as e,c as t,o as a,aq as o}from"./chunks/framework.CkWLY5K4.js";const m=JSON.parse(`{"title":"Hoshi Ori Yume Mirai","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":" ","6":"=","7":" ","8":"'","9":"H","10":"o","11":"s","12":"h","13":"i","14":" ","15":"O","16":"r","17":"i","18":" ","19":"Y","20":"u","21":"m","22":"e","23":" ","24":"M","25":"i","26":"r","27":"a","28":"i","29":"'"},"headers":[],"relativePath":"visual-novels/hoshi-ori-yume-mirai.md","filePath":"visual-novels/hoshi-ori-yume-mirai.md","lastUpdated":1747549240000}`),l={name:"visual-novels/hoshi-ori-yume-mirai.md"};function r(n,i,s,u,h,c){return a(),t("div",null,i[0]||(i[0]=[o('<h1 id="hoshi-ori-yume-mirai" tabindex="-1">Hoshi Ori Yume Mirai <a class="header-anchor" href="#hoshi-ori-yume-mirai" aria-label="Permalink to &quot;Hoshi Ori Yume Mirai&quot;">​</a></h1><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><h4 id="lutris" tabindex="-1">Lutris <a class="header-anchor" href="#lutris" aria-label="Permalink to &quot;Lutris&quot;">​</a></h4><div class="info custom-block github-alert"><p class="custom-block-title">Information</p><p>Tested with <a href="/visual-novel-wiki/linux/adding-wine-versions.html">Lutris-GE-Proton 7-32</a>.</p></div><div class="warning custom-block github-alert"><p class="custom-block-title">Warning</p><p>We will be using the Disk installer version (it has two disk images), mount both using <a href="/visual-novel-wiki/linux/cdemu.html">CDEmu</a>.</p></div><ol><li><p>Add locally installed game with these settings:</p><ul><li>In &quot;Game info&quot;, select &quot;Wine&quot; for &quot;Runner&quot;</li><li>In &quot;Game options&quot;, select any prefix directory for &quot;Wine prefix&quot; and <code>Autorun.exe</code> for &quot;Executable&quot; (installation only)</li><li>In &quot;System options&quot;, set up Japanese locales with this environment variable: <code>LC_ALL=ja_JP.utf8</code></li></ul></li><li><p>Run &quot;Autorun.exe&quot; and install the game using the first button.</p></li><li><p>Click on the button with a &quot;Y&quot;.</p></li><li><p>The installer will wait for the second disk. Instead, stop the installer using Lutris.</p></li><li><p>Locate the <code>SetupData/gamedata</code> directory inside the second disk, copy all the content (not the directory) inside the installation folder in your Wine prefix.</p></li><li><p>Replace all the content of the <a href="https://github.com/hanabiworks/Hoshi-Ori-Yume-Mirai-Perfect-Edition-English-Translation" target="_blank" rel="noreferrer">English patch</a> inside the same directory.</p></li><li><p>Edit the configuration of the game:</p><ul><li>In &quot;Game options&quot;, select <code>SiglusEngine.exe</code> for &quot;Executable&quot;</li></ul></li></ol><div class="info custom-block github-alert"><p class="custom-block-title">Information</p><p>If everything works, HanabiWorks and Tsurezure Scans splash screens should appear.</p></div><h3 id="steam-deck" tabindex="-1">Steam Deck <a class="header-anchor" href="#steam-deck" aria-label="Permalink to &quot;Steam Deck&quot;">​</a></h3><p>Download version only, <a href="/visual-novel-wiki/linux/cdemu.html">CDEmu</a> under testing.</p><h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">​</a></h2><ul><li><a href="https://vndb.org/v14265" target="_blank" rel="noreferrer">VNDB</a></li><li><a href="https://www.steamgriddb.com/game/5281426" target="_blank" rel="noreferrer">SteamGridDB</a></li><li><a href="https://forums.fuwanovel.net/topic/21841-hoshi-ori-yume-mirai-star-weaving-%E2%98%86-dreaming-of-the-future/" target="_blank" rel="noreferrer">Walkthrough</a></li><li><a href="https://github.com/hanabiworks/Hoshi-Ori-Yume-Mirai-Perfect-Edition-English-Translation" target="_blank" rel="noreferrer">English patch Github repository</a></li></ul>',12)]))}const p=e(l,[["render",r]]);export{m as __pageData,p as default};
